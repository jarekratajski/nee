buildscript {
    ext {
        kotlin_version = '1.3.50'
        liquibase_version='3.6.1'
        kotlintest_version='3.3.2'
        vavr_version='0.10.2'
        h2_version='1.4.193'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}



allprojects {
    apply plugin: "kotlin"
    apply plugin: "maven-publish"
    apply plugin: "jacoco"

    group 'pl.setblack'
    version '0.2.0-SNAPSHOT'

    dependencies {
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
            allWarningsAsErrors = true
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
        }
    }
    test {
        useJUnitPlatform()
    }

    jacocoTestReport {
        reports {
            html.enabled = true
            xml.enabled = false
            csv.enabled = false
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }
}


task generateMergedReport(type: JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.setFrom files(subprojects.sourceSets.main.output)
    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}